<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.himi.love.mapper.PostMapper">
    <resultMap id="BaseResultMap" type="com.himi.love.model.Post">
        <id column="PostID" jdbcType="INTEGER" property="postID" />
        <result column="Content" jdbcType="VARCHAR" property="content" />
        <result column="UserID" jdbcType="INTEGER" property="userID" />
        <result column="CoupleID" jdbcType="INTEGER" property="coupleID" />
        <result column="LocationID" jdbcType="INTEGER" property="locationID" />
        <result column="CreatedAt" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="UpdatedAt" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="IsDeleted" jdbcType="BOOLEAN" property="isDeleted" />
    </resultMap>

    <select id="findById" resultMap="BaseResultMap">
        SELECT * FROM Post WHERE PostID = #{postId} AND IsDeleted = false
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM Post WHERE IsDeleted = false ORDER BY CreatedAt DESC
    </select>

    <select id="findByUserId" resultMap="BaseResultMap">
        SELECT * FROM Post WHERE UserID = #{userId} AND IsDeleted = false ORDER BY CreatedAt DESC
    </select>

    <select id="findByCoupleId" resultMap="BaseResultMap">
        SELECT * FROM Post WHERE CoupleID = #{coupleId} AND IsDeleted = false ORDER BY CreatedAt DESC
    </select>

    <select id="findByLocationId" resultMap="BaseResultMap">
        SELECT * FROM Post WHERE LocationID = #{locationId} AND IsDeleted = false ORDER BY CreatedAt DESC
    </select>

    <select id="findByCoupleIdWithPagination" resultMap="BaseResultMap">
        SELECT * FROM Post 
        WHERE CoupleID = #{coupleId} AND IsDeleted = false 
        ORDER BY CreatedAt DESC
        LIMIT #{offset}, #{limit}
    </select>

    <insert id="insert" parameterType="com.himi.love.model.Post" useGeneratedKeys="true" keyProperty="postID">
        INSERT INTO Post (Content, UserID, CoupleID, LocationID, CreatedAt, UpdatedAt, IsDeleted)
        VALUES (#{content}, #{userID}, #{coupleID}, #{locationID}, #{createdAt}, #{updatedAt}, #{isDeleted})
    </insert>

    <select id="getLastInsertId" resultType="Integer">
        SELECT PostID FROM Post ORDER BY CreatedAt DESC LIMIT 1
    </select>

    <update id="update" parameterType="com.himi.love.model.Post">
        UPDATE Post
        SET Content = #{content},
            UpdatedAt = #{updatedAt},
            IsDeleted = #{isDeleted}
        WHERE PostID = #{postID}
    </update>

    <update id="deleteById">
        UPDATE Post SET IsDeleted = true, UpdatedAt = NOW() WHERE PostID = #{postId}
    </update>

    <select id="getUserByPostId" resultType="com.himi.love.model.User">
        SELECT u.*
        FROM User u
                 JOIN Post p ON u.UserID = p.UserID
        WHERE p.PostID = #{postId}
    </select>

    <select id="findImagesByPostId" resultType="com.himi.love.dto.ImageDTO">
        SELECT i.ImageID, i.ImageURL, i.PostID, i.OrderIndex
        FROM Image i
        WHERE i.PostID = #{postId}
        ORDER BY i.OrderIndex ASC
    </select>

    <!-- 查询帖子关联的标签 -->
    <select id="findTagsByPostId" resultType="com.himi.love.dto.TagDTO">
        SELECT t.*
        FROM Tag t
                 JOIN Post_Tag pt ON t.TagID = pt.TagID
        WHERE pt.PostID = #{postId}
    </select>

    <!-- 查询帖子关联的实体 -->
    <select id="findEntitiesByPostId" resultType="com.himi.love.dto.EntityDTO">
        SELECT e.*
        FROM Entity e
                 JOIN Post_Entity pe ON e.EntityID = pe.EntityID
        WHERE pe.PostID = #{postId}
    </select>

    <!-- 查询帖子的评论列表 -->
    <select id="findCommentsByPostId" resultType="com.himi.love.dto.CommentDTO">
        SELECT c.CommentID, c.Content, c.UserID, c.PostID, c.ParentCommentID, c.IsDeleted, c.CreatedAt, c.UpdatedAt,
               u.UserName, u.Avatar as UserAvatar
        FROM Comment c
                 JOIN User u ON c.UserID = u.UserID
        WHERE c.PostID = #{postId}
          AND c.IsDeleted = false
        ORDER BY c.CreatedAt ASC
    </select>
</mapper>